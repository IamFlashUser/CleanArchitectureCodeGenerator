//------------------------------------------------------------------------------
// <auto-generated>
// CleanArchitecture.Blazor - MIT Licensed.
// Author: {author}
// Created/Modified: {createddate}
// Handles {itemname}CreatedEvent: triggered when a new {itemnamelowercase} is created.
// Extendable for additional actions (e.g., notifications, system updates).
// </auto-generated>
//------------------------------------------------------------------------------


namespace {namespace};

public class {itemname}CreatedEventHandler : INotificationHandler<{itemname}CreatedEvent>
{
        private readonly ILogger<{itemname}CreatedEventHandler> _logger;

        public {itemname}CreatedEventHandler(
            ILogger<{itemname}CreatedEventHandler> logger
            )
        {
            _logger = logger;
        }
        public Task Handle({itemname}CreatedEvent notification, CancellationToken cancellationToken)
        {
            _logger.LogInformation("Handled domain event '{EventType}' with notification: {@Notification} ", notification.GetType().Name, notification);
            return Task.CompletedTask;
        }
}
