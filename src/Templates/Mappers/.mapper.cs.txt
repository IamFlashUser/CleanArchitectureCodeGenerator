//------------------------------------------------------------------------------
// <auto-generated>
//     This file is part of the CleanArchitecture.Blazor project.
//     Licensed to the .NET Foundation under one or more agreements.
//     The .NET Foundation licenses this file to you under the MIT license.
//     See the LICENSE file in the project root for more information.
//
//     Author: {author}
//     Created Date: {createddate}
//     Last Modified: {createddate}
//     Description: 
//       Defines mapping methods between `{itemname}` entities and related DTOs/commands 
//       within the CleanArchitecture.Blazor application. This mapper facilitates 
//       conversions to support different operations, such as creating, updating, 
//       and projecting {itemnamelowercase} data.
// </auto-generated>
//------------------------------------------------------------------------------

using {selectns}.{nameofPlural}.Commands.AddEdit;
using {selectns}.{nameofPlural}.Commands.Create;
using {selectns}.{nameofPlural}.Commands.Update;
using {selectns}.{nameofPlural}.DTOs;

namespace {namespace};

#pragma warning disable RMG020
#pragma warning disable RMG012
[Mapper]
public static partial class {itemname}Mapper
{
    public static partial {itemname}Dto ToDto({itemname} source);
    public static partial {itemname} FromDto({itemname}Dto dto);
    public static partial {itemname} FromEditCommand(AddEdit{itemname}Command command);
    public static partial {itemname} FromCreateCommand(Create{itemname}Command command);
    public static partial Update{itemname}Command ToUpdateCommand({itemname}Dto dto);
    public static partial AddEdit{itemname}Command CloneFromDto({itemname}Dto dto);
    public static partial void ApplyChangesFrom(Update{itemname}Command source, {itemname} target);
    public static partial void ApplyChangesFrom(AddEdit{itemname}Command source, {itemname} target);
    public static partial IQueryable<{itemname}Dto> ProjectTo(this IQueryable<{itemname}> q);
}

